(function(d,l){typeof exports=="object"&&typeof module<"u"?l(exports):typeof define=="function"&&define.amd?define(["exports"],l):(d=typeof globalThis<"u"?globalThis:d||self,l(d["lite-chart"]={}))})(this,function(d){"use strict";class l{constructor(i){this.element=i,i.liteChart=this}createLayout(){this.element.classList.add("lite-chart"),this.element.classList.add(`lite-chart--${this.cssModificator}`),this.chartWrapper=document.createElement("div"),this.chartWrapper.classList="lite-chart__wrapper",this.canvas=document.createElement("canvas"),this.chartWrapper.append(this.canvas),this.element.append(this.chartWrapper),this.ctx=this.canvas.getContext("2d")}mainRender(){this.ctx.clearRect(0,0,this.params.width,this.params.height),this.render()}setMainParameters(){this.params={},this.params.width=this.canvas.offsetWidth,this.params.height=this.canvas.offsetHeight,this.setParameters&&this.setParameters()}setSize(){delete this.canvas.width,delete this.canvas.height,this.canvas.width=this.params.width,this.canvas.height=this.params.height}setEvents(){this.options.iteraction&&(this.canvas.addEventListener("mousemove",this.handleMouseMove.bind(this)),this.canvas.addEventListener("mouseleave",this.handleMouseLeave.bind(this))),window.addEventListener("resize",()=>{this.setMainParameters(),this.setSize(),this.drawChart()})}renderTooltip(i,t,e){this.tooltipElement?this.tooltipElement.innerHTML="":(this.tooltipElement=document.createElement("div"),this.tooltipElement.classList.add("lite-chart__tooltip")),this.tooltipElement.innerHTML=i.label?`
      <div class="lite-chart__tooltip-label">${i.label}</div>
      <div class="lite-chart__tooltip-value">${i.value}</div>
    `:`
      <div class="lite-chart__tooltip-value">${i.value}</div>
    `,this.tooltipElement.style.setProperty("--center-x",`${t}px`),this.tooltipElement.style.setProperty("--center-y",`${e}px`),this.chartWrapper.append(this.tooltipElement),this.tooltipElement.classList.add("active")}removeTooltip(){this.tooltipElement&&this.tooltipElement.classList.remove("active")}startAnimation(){this.animationStartTime=Date.now(),this.animationFrameId=requestAnimationFrame(this.animate.bind(this))}stopAnimation(){cancelAnimationFrame(this.animationFrameId)}interpolateColor(i,t,e){const s=this.hexToRGB(i),a=this.hexToRGB(t),o=s.map((h,r)=>{const u=(a[r]-h)*e;return Math.floor(h+u)});return this.rgbToHex(o)}hexToRGB(i){const t=Number.parseInt(i.slice(1,3),16),e=Number.parseInt(i.slice(3,5),16),s=Number.parseInt(i.slice(5,7),16);return[t,e,s]}rgbToHex(i){const[t,e,s]=i,a=t.toString(16).padStart(2,"0"),o=e.toString(16).padStart(2,"0"),h=s.toString(16).padStart(2,"0");return`#${a}${o}${h}`}lightenColor(i){const e=this.hexToRGB(i).map(s=>Math.min(s+this.options.lightenValue,255));return this.rgbToHex(e)}update(i,t={}){this.data=i,this.options=Object.assign({},this.options,t),this.setMainParameters(),this.localUpdate(),this.mainRender()}}class c extends l{constructor(i){super(i.element),this.data=i.data,this.options=Object.assign({},c.defaultOptions,i.options),this.cssModificator="bar",this.createLayout(),this.setMainParameters(),this.setBars(),this.setSize(),this.mainRender(),this.setEvents()}render(){this.drawChart(),this.options.labelsX&&this.renderLabelsX(),this.options.labelsY&&this.renderLabelsY()}setParameters(){this.maxBarValue=Number.NEGATIVE_INFINITY,this.minBarValue=0;for(const i of this.data)i.value>this.maxBarValue&&(this.maxBarValue=i.value),i.value<this.minBarValue&&(this.minBarValue=i.value);this.unitToPx=this.params.height/(Math.abs(this.minBarValue)+this.maxBarValue+this.options.paddingTop+this.options.paddingBottom)}setBars(){this.bars=[];const i=this.data.length*this.options.barWidth+(this.data.length-1)*this.options.barSpacing;let e=(this.params.width-i)/2;for(const s of this.data){const a=Math.abs(s.value)*this.unitToPx,o=s.value>0?(this.maxBarValue+this.options.paddingTop-s.value)*this.unitToPx+.5:(this.maxBarValue+this.options.paddingTop)*this.unitToPx+.5;this.bars.push({value:s.value,label:s.label,x:e,y:o,height:a,width:this.options.barWidth}),e+=this.options.barSpacing+this.options.barWidth}}drawChart(){this.drawGrid(),this.drawBars()}drawGrid(){this.options.gridY&&this.drawGridY(),this.options.gridX&&this.drawGridX()}drawGridY(){const i=Math.floor((Math.abs(this.minBarValue)+this.maxBarValue+this.options.paddingTop+this.options.paddingBottom)/this.options.yAxisSplitNumber);this.ctx.strokeStyle=this.options.gridYColor,this.ctx.lineWidth=this.options.gridYWidth,this.ctx.textAlign="right",this.ctx.beginPath(),this.ctx.moveTo(0,(this.maxBarValue+this.options.paddingTop)*this.unitToPx+.5),this.ctx.lineTo(this.params.width,(this.maxBarValue+this.options.paddingTop)*this.unitToPx+.5);for(let t=this.maxBarValue+this.options.paddingTop-i;t>0;t-=i)this.ctx.moveTo(0,t*this.unitToPx+.5),this.ctx.lineTo(this.params.width,t*this.unitToPx+.5);for(let t=this.maxBarValue+this.options.paddingTop+i;t<Math.abs(this.minBarValue)+this.maxBarValue+this.options.paddingTop;t+=i)this.ctx.moveTo(0,t*this.unitToPx+.5),this.ctx.lineTo(this.params.width,t*this.unitToPx+.5);this.ctx.stroke()}drawGridX(){this.ctx.strokeStyle=this.options.gridXColor,this.ctx.lineWidth=this.options.gridYWidth,this.ctx.beginPath();const i=this.data.length*this.options.barWidth+(this.data.length-1)*this.options.barSpacing;let e=(this.params.width-i)/2-this.options.barSpacing/2;for(let s=0;s<this.data.length+1;s++)this.ctx.moveTo(e,0),this.ctx.lineTo(e,this.params.height),e+=this.options.barSpacing+this.options.barWidth;this.ctx.stroke()}drawBars(){for(const[i,t]of this.bars.entries())this.ctx.fillStyle=i===this.hoveredBarIndex?this.hoveredBarColor:this.options.barColor,this.ctx.fillRect(t.x,t.y,this.options.barWidth,t.height),this.options.barBorderWidth!==0&&(this.ctx.strokeStyle=this.options.barBorderColor,this.ctx.lineWidth=this.options.barBorderWidth,this.ctx.strokeRect(t.x,t.y,this.options.barWidth,t.height))}renderLabelsY(){this.lablesYElement?this.lablesYElement.innerHTML="":(this.lablesYElement=document.createElement("div"),this.lablesYElement.classList.add("lite-chart__labels"),this.lablesYElement.classList.add("lite-chart__labels--y"),this.chartWrapper.classList.add("lite-chart__wrapper--pl")),this.labelsY=[],this.labelsY.push({value:0,yCoord:(this.maxBarValue+this.options.paddingTop)*this.unitToPx});const i=Math.floor((Math.abs(this.minBarValue)+this.maxBarValue+this.options.paddingTop+this.options.paddingBottom)/this.options.yAxisSplitNumber);let t=i;for(let e=this.maxBarValue+this.options.paddingTop-i;e>0;e-=i)this.labelsY.unshift({value:t,yCoord:e*this.unitToPx}),t+=i;t=-i;for(let e=this.maxBarValue+this.options.paddingTop+i;e<Math.abs(this.minBarValue)+this.maxBarValue+this.options.paddingTop;e+=i)this.labelsY.push({value:t,yCoord:e*this.unitToPx}),t-=i;for(const e of this.labelsY){const s=document.createElement("div");s.classList.add("lite-chart__label"),s.textContent=e.value,s.style.setProperty("--y",`${e.yCoord}px`),this.lablesYElement.append(s)}this.chartWrapper.append(this.lablesYElement)}renderLabelsX(){this.lablesXElement?this.lablesXElement.innerHTML="":(this.lablesXElement=document.createElement("div"),this.lablesXElement.classList.add("lite-chart__labels"),this.lablesXElement.classList.add("lite-chart__labels--x"),this.chartWrapper.classList.add("lite-chart__wrapper--pb")),this.labelsX=[];for(const i of this.bars)this.labelsX.push({label:i.label,xCoord:i.x+this.options.barWidth/2});for(const i of this.labelsX){const t=document.createElement("div");t.classList.add("lite-chart__label"),t.textContent=i.label,t.style.setProperty("--x",`${i.xCoord}px`),this.lablesXElement.append(t)}this.chartWrapper.append(this.lablesXElement)}handleMouseMove(i){const t=this.canvas.getBoundingClientRect(),e=i.clientX-t.left,s=i.clientY-t.top;for(const[a,o]of this.bars.entries())if(e>=o.x&&e<=o.x+o.width&&s>=o.y&&s<=o.y+o.height){this.hoveredBarIndex=a;break}else this.hoveredBarIndex=void 0;if(this.hoveredBarIndex===void 0)this.backChartState();else if(this.hoveredBarIndex!==this.prevHoveredBarIndex){if(this.prevHoveredBarIndex=this.hoveredBarIndex,this.options.onBarHover&&typeof this.options.onBarHover=="function"&&this.options.onBarHover({index:this.hoveredBarIndex,label:this.bars[this.hoveredBarIndex].label,value:this.bars[this.hoveredBarIndex].value}),this.options.tooltip){const a={label:this.bars[this.hoveredBarIndex].label,value:this.bars[this.hoveredBarIndex].value},o=this.bars[this.hoveredBarIndex].x+this.options.barWidth/2,h=this.bars[this.hoveredBarIndex].y+this.bars[this.hoveredBarIndex].height/2;this.removeTooltip(),this.renderTooltip(a,o,h)}this.startAnimation()}}handleMouseLeave(){this.backChartState()}animate(){if(this.hoveredBarIndex!==void 0){const t=Date.now()-this.animationStartTime,e=Math.min(t/this.options.colorTransitionDuration,1),s=this.options.colorTransitionTimingFunction(e);this.hoveredBarColor=this.interpolateColor(this.options.barColor,this.options.hoverBarColor||this.lightenColor(this.options.barColor),s),this.drawBars(),e<1&&(this.animationFrameId=requestAnimationFrame(this.animate.bind(this)))}}backChartState(){this.stopAnimation(),this.options.tooltip&&this.removeTooltip(),this.hoveredBarIndex!==void 0&&(this.hoveredBarColor=this.options.barColor),this.hoveredBarIndex=void 0,this.prevHoveredBarIndex=void 0,this.drawBars()}localUpdate(){this.setBars()}}c.defaultOptions={gridYColor:"#d4d4d4",gridXColor:"#d4d4d4",gridYWidth:1,gridXWidth:1,barColor:"#29c5f6",barBorderColor:"#000000",barBorderWidth:0,barWidth:50,barSpacing:30,yAxisSplitNumber:10,paddingTop:2,paddingBottom:2,labelsX:!0,labelsY:!0,gridX:!0,gridY:!0,iteraction:!0,lightenValue:50,tooltip:!0,colorTransitionTimingFunction:function(n){return n<.5?2*n*n:1-Math.pow(-2*n+2,2)/2},colorTransitionDuration:200};class m extends l{constructor(i){super(i.element),this.data=i.data,this.options=Object.assign({},m.defaultOptions,i.options),this.cssModificator="line",this.createLayout(),this.setMainParameters(),this.setSize(),this.setDots(),this.mainRender(),this.setEvents()}setDots(){this.dots=[];const i=(this.params.width-2*this.options.padding)/(this.data.length-1),t=(this.params.height-2*this.options.padding)/(Math.max(...this.data)-Math.min(...this.data));for(const[e,s]of this.data.entries()){const a=this.options.padding+e*i,o=this.params.height-this.options.padding-(s-Math.min(...this.data))*t;this.dots.push({x:a,y:o,value:s})}}drawChart(){this.drawGrid(),this.drawAxes(),this.options.line&&this.drawGraph(),this.options.dots&&this.drawsDots()}drawAxes(){if(this.ctx.beginPath(),this.options.gridX){this.ctx.lineWidth=this.options.axisXWidth,this.ctx.strokeStyle=this.options.axisXColor,this.ctx.moveTo(this.options.padding,this.params.height-this.options.padding),this.ctx.lineTo(this.params.width-this.options.padding,this.params.height-this.options.padding),this.ctx.strokeStyle=this.options.axisXTickColor,this.ctx.lineWidth=this.options.axisXTickWidth;const i=(this.params.width-2*this.options.padding)/(this.data.length-1);for(let t=0;t<this.data.length;t++){const e=this.options.padding+t*i;this.ctx.moveTo(e,this.params.height-this.options.padding-this.options.axisXTickLength/2),this.ctx.lineTo(e,this.params.height-this.options.padding+this.options.axisXTickLength/2),this.ctx.fillText(t.toString(),e-4,this.params.height-this.options.padding+20)}}if(this.options.gridY){this.ctx.lineWidth=this.options.axisYWidth,this.ctx.strokeStyle=this.options.axisYColor,this.ctx.moveTo(this.options.padding,this.options.padding),this.ctx.lineTo(this.options.padding,this.params.height-this.options.padding);const i=(this.params.height-2*this.options.padding)/this.options.yAxisSplitNumber;this.ctx.strokeStyle=this.options.axisYTickColor,this.ctx.lineWidth=this.options.axisYTickWidth;for(let t=0;t<=this.options.yAxisSplitNumber;t++){const e=this.params.height-this.options.padding-t*i;this.ctx.moveTo(this.options.padding-this.options.axisYTickLength/2,e),this.ctx.lineTo(this.options.padding+this.options.axisYTickLength/2,e)}}this.ctx.stroke()}drawGrid(){if(this.ctx.beginPath(),this.options.gridY){this.ctx.lineWidth=this.options.gridXWidth,this.ctx.strokeStyle=this.options.gridXColor;const i=(this.params.height-2*this.options.padding)/this.options.yAxisSplitNumber;for(let t=0;t<=this.options.yAxisSplitNumber;t++){const e=this.params.height-this.options.padding-t*i;this.ctx.moveTo(this.options.padding,e),this.ctx.lineTo(this.params.width-this.options.padding,e)}}if(this.options.gridX){this.ctx.lineWidth=this.options.gridYWidth,this.ctx.strokeStyle=this.options.gridYColor;const i=(this.params.width-2*this.options.padding)/(this.data.length-1);for(let t=0;t<this.data.length;t++){const e=this.options.padding+t*i;this.ctx.moveTo(e,this.options.padding),this.ctx.lineTo(e,this.params.height-this.options.padding)}}this.ctx.stroke()}drawGraph(){this.ctx.beginPath(),this.ctx.strokeStyle=this.options.lineColor,this.ctx.lineWidth=this.options.lineWidth,this.options.interpolation?this.drawInterpolationLine():this.drawLine()}drawLine(){for(const[i,t]of this.dots.entries())i===0?this.ctx.moveTo(t.x,t.y):this.ctx.lineTo(t.x,t.y);this.ctx.stroke()}drawInterpolationLine(){for(let i=0;i<this.dots.length-1;i++){const t=this.dots[i],e=this.dots[i+1],s=t.x+(e.x-t.x)/3*this.options.tensionCoeff,a=t.y,o=e.x-(e.x-t.x)/3*this.options.tensionCoeff,h=e.y;this.ctx.moveTo(t.x,t.y),this.ctx.bezierCurveTo(s,a,o,h,e.x,e.y)}this.ctx.stroke()}drawsDots(){for(const i of this.dots)this.ctx.fillStyle=this.options.dotColor,this.options.dotBorderWidth&&(this.ctx.lineWidth=this.options.dotBorderWidth,this.ctx.strokeStyle=this.options.dotBorderColor),this.ctx.beginPath(),this.ctx.arc(i.x,i.y,4,0,2*Math.PI),this.ctx.stroke(),this.ctx.fill()}calculatePoints(){const i=this.data.length,t=(this.params.width-this.options.padding*2)/(i-1),e=Math.max(...this.data)-Math.min(...this.data),s=(this.params.height-this.options.padding*2)/e;return this.data.map((a,o)=>({x:this.options.padding+o*t,y:this.params.height-this.options.padding-(a-Math.min(...this.data))*s}))}renderLabelsY(){this.lablesYElement?this.lablesYElement.innerHTML="":(this.lablesYElement=document.createElement("div"),this.lablesYElement.classList.add("lite-chart__labels"),this.lablesYElement.classList.add("lite-chart__labels--y"),this.chartWrapper.classList.add("lite-chart__wrapper--pl")),this.labelsY=[];const i=(this.params.height-2*this.options.padding)/this.options.yAxisSplitNumber,t=Math.max(...this.data),e=Math.min(...this.data);this.ctx.strokeStyle=this.options.axisYTickColor,this.ctx.lineWidth=this.options.axisYTickWidth;for(let s=0;s<=this.options.yAxisSplitNumber;s++){const a=this.params.height-this.options.padding-s*i,o=e+(t-e)*(s/this.options.yAxisSplitNumber);this.labelsY.push({value:o,yCoord:a})}for(const s of this.labelsY){const a=document.createElement("div");a.classList.add("lite-chart__label"),a.textContent=s.value,a.style.setProperty("--y",`${s.yCoord}px`),this.lablesYElement.append(a)}this.chartWrapper.append(this.lablesYElement)}renderLabelsX(){this.lablesXElement?this.lablesXElement.innerHTML="":(this.lablesXElement=document.createElement("div"),this.lablesXElement.classList.add("lite-chart__labels"),this.lablesXElement.classList.add("lite-chart__labels--x"),this.chartWrapper.classList.add("lite-chart__wrapper--pb")),this.labelsX=[];const i=(this.params.width-2*this.options.padding)/(this.data.length-1);for(let t=0;t<this.data.length;t++){const e=this.options.padding+t*i;this.labelsX.push({label:t,xCoord:e})}for(const t of this.labelsX){const e=document.createElement("div");e.classList.add("lite-chart__label"),e.textContent=t.label,e.style.setProperty("--x",`${t.xCoord}px`),this.lablesXElement.append(e)}this.chartWrapper.append(this.lablesXElement)}render(){this.drawChart(),this.options.labelsX&&this.renderLabelsX(),this.options.labelsY&&this.renderLabelsY()}handleMouseMove(i){const t=this.canvas.getBoundingClientRect(),e=i.clientX-t.left,s=i.clientY-t.top;for(const[a,o]of this.dots.entries())if(e>=o.x-this.options.dotRadius-this.options.iteractionAdditionalRadius&&e<=o.x+(this.options.dotRadius+this.options.iteractionAdditionalRadius)*2&&s>=o.y-this.options.dotRadius-this.options.iteractionAdditionalRadius&&s<=o.y+(this.options.dotRadius+this.options.iteractionAdditionalRadius)*2){this.hoveredDotIndex=a;break}else this.hoveredDotIndex=void 0;if(this.hoveredDotIndex===void 0)this.backChartState();else if(this.hoveredDotIndex!==this.prevHoveredDotIndex&&(this.prevHoveredDotIndex=this.hoveredDotIndex,this.options.onDotHover&&typeof this.options.onDotHover=="function"&&this.options.onDotHover({index:this.hoveredDotIndex,value:this.dots[this.hoveredDotIndex].value}),this.options.tooltip)){const a={value:this.dots[this.hoveredDotIndex].value,label:this.options.tooltipLabel},o=this.dots[this.hoveredDotIndex].x,h=this.dots[this.hoveredDotIndex].y;this.removeTooltip(),this.renderTooltip(a,o,h)}}backChartState(){this.options.tooltip&&this.removeTooltip(),this.hoveredDotIndex=void 0,this.prevHoveredDotIndex=void 0}handleMouseLeave(){this.backChartState()}localUpdate(){this.setDots()}}m.defaultOptions={padding:5,axisYColor:"#000000",axisYTickLength:5,axisYTickWidth:1,axisYTickColor:"#000000",axisYWidth:1,axisXColor:"#000000",axisXWidth:1,axisXTickLength:5,axisXTickColor:"#000000",axisXTickWidth:1,gridYColor:"#e0e0e0",gridYWidth:1,gridXColor:"#e0e0e0",gridXWidth:1,line:!0,lineColor:"#ff0000",lineWidth:1,interpolation:!0,tensionCoeff:1,yAxisSplitNumber:5,labelsX:!0,labelsY:!0,gridX:!0,gridY:!0,lightenValue:50,tooltip:!0,dots:!1,dotColor:"#ffffff",dotRadius:3,dotBorderWidth:2,dotBorderColor:"#000000",iteraction:!0,iteractionAdditionalRadius:4,tooltipLabel:"",colorTransitionTimingFunction:function(n){return n<.5?2*n*n:1-Math.pow(-2*n+2,2)/2}};class x extends l{constructor(i){super(i.element),this.data=i.data,this.options=Object.assign({},x.defaultOptions,i.options),this.cssModificator="pie",this.createLayout(),this.setMainParameters(),this.setSize(),this.setSegments(),this.setEvents(),this.mainRender()}setSegments(){let i=0;this.segments=[];for(const t of this.data){const e=2*Math.PI*t.value/this.params.totalValue;this.segments.push({color:t.color,hoverColor:t.hoverColor||this.lightenColor(t.color),currentColor:t.color,value:t.value,label:t.label,startAngle:i,endAngle:i+e}),i+=e}}setParameters(){this.params.totalValue=this.data.reduce((i,t)=>i+t.value,0),this.params.padding=this.options.padding+this.options.borderWidth,this.params.radius=Math.min(this.params.width,this.params.height)/2-this.params.padding,this.params.centerX=this.params.width/2,this.params.centerY=this.params.height/2}render(){this.drawChart(),this.drawLegend(),this.options.labels&&this.renderLabels()}drawSegment(i,t,e){this.ctx.beginPath(),this.ctx.moveTo(this.params.centerX,this.params.centerY),this.ctx.arc(this.params.centerX,this.params.centerY,this.params.radius,i,t),this.ctx.closePath(),this.ctx.fillStyle=e,this.ctx.fill(),this.options.borderWidth>0&&(this.ctx.strokeStyle=this.options.borderColor,this.ctx.lineWidth=this.options.borderWidth,this.ctx.stroke())}drawChart(){for(const i of this.segments)this.drawSegment(i.startAngle,i.endAngle,i.currentColor)}drawLegend(){if(!this.options.legend)return;this.legendElement||(this.legendElement=document.createElement("div"),this.legendElement.classList.add("lite-chart__legend"),this.element.append(this.legendElement)),this.legendElement.innerHTML="";const i=document.createElement("ul");i.classList.add("lite-chart__legend-list"),this.legendElement.append(i);for(const t of this.data){const e=document.createElement("li");e.classList.add("lite-chart__legend-item"),i.append(e);const s=document.createElement("span");s.classList.add("lite-chart__legend-color"),s.style.backgroundColor=t.color,e.append(s);const a=document.createElement("span");a.classList.add("lite-chart__legend-label"),a.textContent=t.label,e.append(a);const o=document.createElement("span");o.classList.add("lite-chart__legend-value"),o.textContent=`${Number.parseFloat((t.value/this.params.totalValue*100).toFixed(2))}%`,e.append(o)}}handleMouseMove(i){const{offsetX:t,offsetY:e}=i,s=t-this.params.centerX,a=e-this.params.centerY,o=Math.sqrt(s*s+a*a);let h=Math.atan2(a,s);h<0&&(h+=2*Math.PI);const r=this.segments.findIndex(p=>h>p.startAngle&&h<p.endAngle);if(r===-1||o>this.params.radius)this.backChartState();else if(this.hoverSegment!==r){if(this.options.onSegmentHover&&typeof this.options.onSegmentHover=="function"&&this.options.onSegmentHover({index:r,label:this.segments[r].label,value:this.segments[r].value/this.params.totalValue*100,rawValue:this.segments[r].value}),this.backChartState(),this.hoverSegment=r,this.hoveredSegmentColor=this.segments[r].hoverColor,this.options.tooltip){const p={label:this.segments[r].label,value:`${Number.parseFloat((this.segments[r].value/this.params.totalValue*100).toFixed(2))}%`},u=(this.segments[r].startAngle+this.segments[r].endAngle)/2,b=this.params.centerX+this.params.radius/2*Math.cos(u),v=this.params.centerY+this.params.radius/2*Math.sin(u);this.removeTooltip(),this.renderTooltip(p,b,v)}this.startAnimation()}}handleMouseLeave(){this.backChartState()}backChartState(){this.stopAnimation(),this.options.tooltip&&this.removeTooltip(),this.hoverSegment!==void 0&&(this.segments[this.hoverSegment].currentColor=this.segments[this.hoverSegment].color),this.hoverSegment=void 0,this.drawChart()}renderLabels(){this.lablesElement?this.lablesElement.innerHTML="":(this.lablesElement=document.createElement("div"),this.lablesElement.classList.add("lite-chart__labels"));for(const i of this.segments){const t=document.createElement("div");t.classList.add("lite-chart__label"),t.innerHTML=`
      <div class="chart__label-label">${i.label}</div>
      <div class="chart__label-value">${Number.parseFloat((i.value/this.params.totalValue*100).toFixed(2))}%</div>
      `;const e=(i.startAngle+i.endAngle)/2,s=this.params.centerX+this.params.radius/2*Math.cos(e),a=this.params.centerY+this.params.radius/2*Math.sin(e);t.style.setProperty("--angle",`${e*180/Math.PI}deg`),t.style.setProperty("--center-x",`${s}px`),t.style.setProperty("--center-y",`${a}px`),this.lablesElement.append(t)}this.chartWrapper.append(this.lablesElement)}animate(){if(this.hoverSegment!==void 0){const t=Date.now()-this.animationStartTime,e=Math.min(t/this.options.colorTransitionDuration,1),s=this.options.colorTransitionTimingFunction(e);this.segments[this.hoverSegment].currentColor=this.interpolateColor(this.segments[this.hoverSegment].color,this.segments[this.hoverSegment].hoverColor,s),this.drawChart(),e<1&&(this.animationFrameId=requestAnimationFrame(this.animate.bind(this)))}}localUpdate(){this.setSegments()}}x.defaultOptions={borderWidth:0,borderColor:"#000000",padding:0,legend:!0,lightenValue:50,tooltip:!0,labels:!1,iteraction:!0,colorTransitionTimingFunction:function(n){return n<.5?2*n*n:1-Math.pow(-2*n+2,2)/2},colorTransitionDuration:200};const f="";class g{constructor(i,t){switch(i){case"pie":{new x(t);break}case"bar":{new c(t);break}case"line":{new m(t);break}}}}d.LiteChart=g,Object.defineProperty(d,Symbol.toStringTag,{value:"Module"})});
